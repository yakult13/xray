#!/bin/bash
# Laravel Installer
# Script by Juan
# 
# Illegal selling and redistribution of this script is strictly prohibited
# Please respect author's Property
# Binigay sainyo ng libre, ipamahagi nyo rin ng libre.
#
#

 # Now check if our machine is in root user, if not, this script exits
 # If you're on sudo user, run `sudo su -` first before running this script
if [[ $EUID -ne 0 ]];then
 ScriptMessage
 echo -e "[\e[1;31mError\e[0m] This script must be run as root, exiting..."
 exit 1
fi

# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors

Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan

read -p "Enter your domain:" DOMAIN
read -p "Enter your email:" EMAIL

function ip_address() {
  local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipv4.icanhazip.com )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipinfo.io/ip )"
  [ ! -z "${IP}" ] && echo "${IP}" || echo
} 
IPADDR="$(ip_address)"

function Update() {
    sudo apt-get update -y 
    sudo apt-get upgrade -y
    sudo apt install curl -y

}

function runv2() {
    bash <(curl -Ls https://blog.sprov.xyz/v2-ui.sh)
}

function installv2() {
    v2-ui install
}

function installCertBot() {
    sudo apt install software-properties-common
    sudo add-apt-repository ppa:certbot/certbot
    sudo apt-get install certbot -y

}

function os_tuning() {
    sed -i '/^\*\ *soft\ *nofile\ *[[:digit:]]*/d' /etc/security/limits.conf
    sed -i '/^\*\ *hard\ *nofile\ *[[:digit:]]*/d' /etc/security/limits.conf
    echo '* soft nofile 65536' >>/etc/security/limits.conf
    echo '* hard nofile 65536' >>/etc/security/limits.conf
    echo '' > /root/.bash_history && history -c && echo '' > /var/log/syslog

   sed -ir "/\(#n\|n\)et.ipv4.tcp_timestamps.*/d;/\(#n\|n\)et.ipv4.tcp_sack.*/d;/\(#n\|n\)et.core.netdev_max_backlog.*/d;/\(#n\|n\)et.ipv4.tcp_low_latency.*/d" /etc/sysctl{.conf,.d/*.conf}
   printf "%b\n" " # GVPNHUB Server tuning
   net.ipv4.tcp_timestamps = 0
   net.ipv4.tcp_sack = 0
   net.core.netdev_max_backlog = 250000
   net.ipv4.tcp_low_latency = 1" > /etc/sysctl.d/80-gvpnhub-tuning.conf
   sed -ir "/\(#n\|n\)et.core.\(netdev\|rmem\|wmem\|optmem\).*/d;/\(#n\|n\)et.ipv4.\(tcp\|udp\)_\(mem\|rmem\|wmem\).*/d" /etc/sysctl{.conf,.d/*.conf}
   printf "%s" "net.core.rmem_max = 16777216
   net.core.wmem_max = 16777216
   net.core.rmem_default = 16777216
   net.core.wmem_default = 16777216
   net.core.optmem_max = 16777216
   net.ipv4.tcp_mem = 16777216 16777216 16777216
   net.ipv4.udp_mem = 16777216 16777216 16777216
   net.ipv4.tcp_rmem = 4096 87380 16777216
   net.ipv4.tcp_wmem = 4096 65536 16777216" >> /etc/sysctl.d/80-gvpnhub-tuning.conf
   sysctl --system &>/dev/null
}

function BBR() {
    wget -q "https://github.com/yue0706/auto_bbr/raw/main/bbr.sh" && chmod +x bbr.sh && ./bbr.sh
}
    
function ScriptMessage() {
 echo -e ""
 echo -e " \033[0;36m(｡◕‿◕｡)\033[0m \033[0;31mXRAY Installer \033[0m"
 echo -e " \033[0;36m mix xray src \033[0m"
 echo -e " \033[0;31m Script Created:\033[0m \033[0;36mGVPNHUB-Juan\033[0m"
 echo -e ""

}

# START INSTALLING
 ScriptMessage
 
 sleep 2

echo -e "\033[0;33m Updatin... \033[0m"
 Update

clear
echo -e "\033[0;33m Getting XRAY... \033[0m"
 runv2

clear
echo -e "\033[0;33m Installing XRAY... \033[0m"
 installv2

clear
echo -e "\033[0;33m Tuning your operating system for maximum performance... "
 os_tuning
clear

echo -e "\033[0;33m Installing CertBot.. \033[0m"
 installCertBot

echo -e "\033[0;33m Installing Auto BBR Linux Kernel 5.13.4... \033[0m"
BBR
echo -e "\033[0;33m Applying All System Changes... \033[0m"
    sysctl --system

clear

echo -e "\033[0;33m Provide Domain and Email \033[0m"
 sudo certbot certonly --standalone --preferred-challenges http --agree-tos --email ${EMAIL} -d ${DOMAIN}

 # clearing all logs in screen
 clear

 ScriptMessage

 echo -e ""
echo -e "\033[0;33m Success Installation \033[0m"
echo -e "\033[0;35m Site: $IPADDR/65432 \033[0m"
echo -e "\033[0;36m User and Pass: admin \033[0m"
echo -e ""
echo -e " Certificate Path"
echo -e " /etc/letsencrypt/live/${DOMAIN}/fullchain.pem"
echo -e " /etc/letsencrypt/live/${DOMAIN}/privkey.pem"
echo -e ""
echo -e "\033[0;33m We Recommend To Reboot Your System \033[0m"
echo -e "\033[0;33m Script NOT FOR SALE \033[0m"
echo -e "\033[0;33m REPORT to kakatol@ninjadns.net \033[0m"

 # Clearing all logs from installation
 rm -rf /root/.bash_history && history -c && echo '' > /var/log/syslog

rm -rf /root/*

exit 1
